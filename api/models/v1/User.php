<?php
namespace api\models\v1;

use yii\behaviors\TimestampBehavior;
use yii\db\ActiveRecord;

/**
 * This is the model class for table "{{%user}}".
 *
 * @property int $id
 * @property int $address_id 默认收货地址
 * @property string $username
 * @property string $truename 真实姓名
 * @property int $birthday 生日
 * @property string $avatar 用户头像
 * @property int $sex 性别
 * @property string $mobile 手机号码
 * @property string $email 邮箱
 * @property int $status 状态
 * @property int $point 积分
 * @property string $id_card_truename 身份证真实姓名
 * @property string $id_card_code 身份证号码
 * @property string $pay_password_hash 支付密码
 * @property int $question_one 问题1
 * @property int $question_two 问题2
 * @property string $answer_one 答案1
 * @property string $answer_two 答案2
 * @property string $auth_key
 * @property string $password_hash
 * @property string $password_reset_token
 * @property int $created_at 添加时间
 * @property int $updated_at 更新时间
 * @property string $created_ip 注册IP
 * @property int $login_at 登录时间
 * @property string $login_ip 登录IP
 */
class User extends \common\models\User
{
    public function rules()
    {
        return [
            [['address_id', 'birthday', 'sex', 'status', 'point', 'question_one', 'question_two', 'created_at', 'updated_at', 'login_at'], 'integer'],
            [['password_hash'], 'required'],
            [['username', 'email'], 'trim'],
            [['username', 'email', 'pay_password_hash', 'password_hash', 'password_reset_token'], 'string', 'max' => 255],
            [['truename', 'id_card_truename', 'created_ip', 'login_ip'], 'string', 'max' => 50],
            [['avatar', 'answer_one', 'answer_two'], 'string', 'max' => 200],
            [['mobile'], 'string', 'max' => 20],
            [['id_card_code'], 'string', 'max' => 18],
            [['auth_key'], 'string', 'max' => 32],
            [['username'], 'unique'],
            [['email'], 'unique'],
            [['password_reset_token'], 'unique'],
            [['mobile'], 'unique'],
            [['id_card_code'], 'unique'],
            ['status', 'in', 'range' => [self::STATUS_ACTIVE, self::STATUS_DELETED]],
        ];
    }

    /**
     * {@inheritdoc}
     */
    public function attributeLabels()
    {
        return [
            'id' => 'ID',
            'address_id' => '默认收货地址',
            'username' => 'Username',
            'truename' => '真实姓名',
            'birthday' => '生日',
            'avatar' => '用户头像',
            'sex' => '性别',
            'mobile' => '手机号码',
            'email' => '邮箱',
            'status' => '状态',
            'point' => '积分',
            'id_card_truename' => '身份证真实姓名',
            'id_card_code' => '身份证号码',
            'pay_password_hash' => '支付密码',
            'question_one' => '问题1',
            'question_two' => '问题2',
            'answer_one' => '答案1',
            'answer_two' => '答案2',
            'auth_key' => 'Auth Key',
            'password_hash' => 'Password Hash',
            'password_reset_token' => 'Password Reset Token',
            'created_at' => 'Created At',
            'updated_at' => 'Updated At',
            'created_ip' => '注册IP',
            'login_at' => '登录时间',
            'login_ip' => '登录IP',
        ];
    }

    /**
     * 自动把时间戳填充指定的属性
     * @inheritdoc
     */
    public function behaviors()
    {
        return [
            'timestamp' => [
                'class' => TimestampBehavior::className(),
                'attributes' => [
                    ActiveRecord::EVENT_BEFORE_INSERT => ['created_at', 'updated_at'],
                    ActiveRecord::EVENT_BEFORE_UPDATE => ['updated_at']
                ]
            ]
        ];
    }

    /**
     * @param bool $insert
     * @return bool
     * @throws \yii\base\Exception
     */
    public function beforeSave($insert)
    {
        if ($this->isNewRecord) {
            $this->status = self::STATUS_ACTIVE;
            $this->setPassword($this->password_hash);
            $this->generateAuthKey();
            $this->generatePasswordResetToken();
        }
        return parent::beforeSave($insert); // TODO: Change the autogenerated stub
    }
}
