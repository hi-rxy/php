<?php

namespace api\modules\v1\controllers;

use api\base\controllers\Auth;
use common\models\Store;
use jinxing\admin\helpers\Helper;
use Yii;
use yii\helpers\Url;

class StoreController extends Auth
{
    /**
     * 指定ORM模型
     * @var string
     */
    public $modelClass = 'common\models\Store';

    public function beforeAction($action)
    {
        $this->allowedApis = ['store/seo'];
        return parent::beforeAction($action); // TODO: Change the autogenerated stub
    }

    /**
     * 设置SEO
     * @return array
     */
    public function actionSeo()
    {
        return $this->success([
            'seo_title'     => Yii::$app->params['site']['WEB_TITLE'],
            'seo_keywords'  => Yii::$app->params['site']['WEB_KEYWORDS'],
            'seo_desc'      => Yii::$app->params['site']['WEB_DESCRIPTION'],
        ]);
    }

    /**
     * 商家入驻首页
     * @return array
     */
    public function actionIndex()
    {
        if (false === ($result = $this->_getStoreStatus())) {
            return $this->error();
        }

        return $this->success([
            'url' => $result
        ]);
    }

    /**
     * 商家入驻申请
     * @return array
     */
    public function actionApply()
    {
        $request = Yii::$app->request;
        $data = [
            'name'              => $request->post('name', ''),
            'logo'              => $request->post('logo', ''),
            'id_card_front'     => $request->post('id_card_front', ''),
            'id_card_side'      => $request->post('id_card_side', ''),
            'desc'              => $request->post('desc', ''),
            'province'          => $request->post('province', ''),
            'city'              => $request->post('city', ''),
            'district'          => $request->post('district', ''),
            'user_address'      => $request->post('user_address', ''),
            'contact'           => $request->post('contact', ''),
            'contact_mobile'    => $request->post('contact_mobile', ''),
            'user_id'           => Yii::$app->user->id,
        ];

        $store  = Store::findOne(['user_id' => $data['user_id']]);
        if (!is_null($store)) {
            return $this->error('入驻已申请，请勿重复操作');
        }

        $model = new $this->modelClass();
        $model->attributes = $data;
        if ($model->save()) {
            return $this->success([
                'url' => Url::toRoute(['store/result']),
            ], 0, '添加成功');
        }

        return $this->error("添加失败\r\n" . Helper::arrayToString($model->getErrors()));
    }

    /**
     * 商家入驻申请结果
     * @return array
     */
    public function actionResult()
    {
        $row = Store::getOneByUid(Yii::$app->user->id);
        if (is_null($row)) return $this->error();
        return $this->success([
            'data' => $row,
            'value' => Store::getArrayStatus($row->status),
            'url' => Url::toRoute(['store/index'])]);
    }

    /**
     * 检查商家入驻申请状态
     */
    private function _getStoreStatus()
    {
        $row = Store::getOneByUid(Yii::$app->user->id);
        if (is_null($row)) return false;
        switch ($row->status) {
            case 0 :
            case 2 :
                $redirect = Url::toRoute(['store/result']);
                break;
            case 1 :
                $redirect = Url::toRoute(['seller/index']);
                break;
        }
        return $redirect;
    }

    /**
     * 异步检查商家店铺名称是否重复
     */
    public function actionCheckStoreName()
    {
        $store_name = Yii::$app->request->post('name', '');
        $store_id = Yii::$app->request->post('store_id', 0);
        $where = ['and'];
        $where[] = ['like', 'name', $store_name];
        if ($store_id) $where[] = ['!=', 'id', $store_id];
        if (!is_null($model = Store::findOne($where))) {
            return $this->error('店铺名称已经重复，请一个试试');
        }
        return $this->success([], 0, '验证通过');
    }
}
